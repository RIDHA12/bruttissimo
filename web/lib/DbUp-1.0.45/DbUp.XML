<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DbUp</name>
    </assembly>
    <members>
        <member name="T:DbUp.Helpers.AdHocSqlRunner">
            <summary>
            A helper for executing SQL queries easily.
            </summary>
        </member>
        <member name="M:DbUp.Helpers.AdHocSqlRunner.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.Helpers.AdHocSqlRunner"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
        </member>
        <member name="M:DbUp.Helpers.AdHocSqlRunner.#ctor(System.String,System.String,DbUp.Preprocessors.IScriptPreprocessor[])">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.Helpers.AdHocSqlRunner"/> class.
            </summary>
            <param name="connectionString">The connection string.</param>
            <param name="schema"></param>
            <param name="additionalScriptPreprocessors"></param>
        </member>
        <member name="M:DbUp.Helpers.AdHocSqlRunner.ExecuteScalar(System.String,System.Func{System.String,System.Object}[])">
            <summary>
            Executes a scalar query.
            </summary>
            <param name="query">The query.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:DbUp.Helpers.AdHocSqlRunner.ExecuteNonQuery(System.String,System.Func{System.String,System.Object}[])">
            <summary>
            Executes a query that returns the number of records modified.
            </summary>
            <param name="query">The query.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="M:DbUp.Helpers.AdHocSqlRunner.ExecuteReader(System.String,System.Func{System.String,System.Object}[])">
            <summary>
            Executes a select query or procedure.
            </summary>
            <param name="query">The query.</param>
            <param name="parameters">The parameters.</param>
            <returns></returns>
        </member>
        <member name="T:DbUp.ConsoleLog">
            <summary>
            A log that writes to the console in a colorful way.
            </summary>
        </member>
        <member name="T:DbUp.ILog">
            <summary>
            Implemented by objects which record the internal details of the database migration.
            </summary>
        </member>
        <member name="M:DbUp.ILog.WriteInformation(System.String,System.Object[])">
            <summary>
            Writes an informational message to the log.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:DbUp.ILog.WriteError(System.String,System.Object[])">
            <summary>
            Writes an error message to the log.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:DbUp.ILog.WriteWarning(System.String,System.Object[])">
            <summary>
            Writes a warning message to the log.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:DbUp.ConsoleLog.WriteInformation(System.String,System.Object[])">
            <summary>
            Writes an informational message to the log.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:DbUp.ConsoleLog.WriteError(System.String,System.Object[])">
            <summary>
            Writes an error message to the log.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="M:DbUp.ConsoleLog.WriteWarning(System.String,System.Object[])">
            <summary>
            Writes a warning message to the log.
            </summary>
            <param name="format">The format.</param>
            <param name="args">The args.</param>
        </member>
        <member name="T:DbUp.DatabaseUpgrader">
            <summary>
            This class orchestrates the database upgrade process.
            </summary>
        </member>
        <member name="M:DbUp.DatabaseUpgrader.#ctor(System.String,DbUp.ScriptProviders.IScriptProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.DatabaseUpgrader"/> class.
            </summary>
        </member>
        <member name="M:DbUp.DatabaseUpgrader.#ctor(System.String,DbUp.ScriptProviders.IScriptProvider,DbUp.Journal.IJournal,DbUp.Execution.IScriptExecutor)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.DatabaseUpgrader"/> class.
            </summary>
            <param name="connectionString">The target database connection string.</param>
            <param name="scriptProvider">The script provider instance.</param>
            <param name="versionTracker">The version tracking instance.</param>
            <param name="scriptExecutor">The script executor instance.</param>
        </member>
        <member name="M:DbUp.DatabaseUpgrader.#ctor(System.String,DbUp.ScriptProviders.IScriptProvider,DbUp.Journal.IJournal,DbUp.Execution.IScriptExecutor,DbUp.ILog)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.DatabaseUpgrader"/> class.
            </summary>
            <param name="connectionString">The target database connection string.</param>
            <param name="scriptProvider">The script provider instance.</param>
            <param name="versionTracker">The version tracking instance.</param>
            <param name="scriptExecutor">The script executor instance.</param>
            <param name="log">The logging mechanism.</param>
        </member>
        <member name="M:DbUp.DatabaseUpgrader.IsUpgradeRequired">
            <summary>
            Determines whether the database is out of date and can be upgraded.
            </summary>
        </member>
        <member name="M:DbUp.DatabaseUpgrader.TryConnect(System.String@)">
            <summary>
            Tries to connect to the database.
            </summary>
            <param name="errorMessage">Any error message encountered.</param>
            <returns></returns>
        </member>
        <member name="M:DbUp.DatabaseUpgrader.PerformUpgrade">
            <summary>
            Performs the database upgrade.
            </summary>
        </member>
        <member name="M:DbUp.DatabaseUpgrader.MarkAsExecuted">
            <summary>
             Creates version record for any new migration scripts without executing them.
             Useful for bringing development environments into sync with automated environments
            </summary>
            <returns></returns>
        </member>
        <member name="T:DbUp.DatabaseUpgradeResult">
            <summary>
            Represents the results of a database upgrade.
            </summary>
        </member>
        <member name="M:DbUp.DatabaseUpgradeResult.#ctor(System.Collections.Generic.IEnumerable{DbUp.ScriptProviders.SqlScript},System.Boolean,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.DatabaseUpgradeResult"/> class.
            </summary>
            <param name="scripts">The scripts that were executed.</param>
            <param name="successful">if set to <c>true</c> [successful].</param>
            <param name="error">The error.</param>
        </member>
        <member name="P:DbUp.DatabaseUpgradeResult.Scripts">
            <summary>
            Gets the scripts that were executed.
            </summary>
        </member>
        <member name="P:DbUp.DatabaseUpgradeResult.Successful">
            <summary>
            Gets a value indicating whether this <see cref="T:DbUp.DatabaseUpgradeResult"/> is successful.
            </summary>
        </member>
        <member name="P:DbUp.DatabaseUpgradeResult.Error">
            <summary>
            Gets the error.
            </summary>
        </member>
        <member name="T:DbUp.Execution.IScriptExecutor">
            <summary>
            This interface is implemented by classes that execute upgrade scripts against a database.
            </summary>
        </member>
        <member name="M:DbUp.Execution.IScriptExecutor.Execute(DbUp.ScriptProviders.SqlScript)">
            <summary>
            Executes the specified script against a database at a given connection string.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="M:DbUp.Execution.IScriptExecutor.VerifySchema">
            <summary>
            Verifies the specified schema exists and is valid
            </summary>
        </member>
        <member name="T:DbUp.Execution.SqlScriptExecutor">
            <summary>
            A standard implementation of the IScriptExecutor interface that executes against a SQL Server 
            database using SQL Server SMO.
            </summary>
        </member>
        <member name="M:DbUp.Execution.SqlScriptExecutor.#ctor(System.String)">
            <summary>
             Initializes an instance of the <see cref="T:DbUp.Execution.SqlScriptExecutor"/> class.
            </summary>
            <param name="connectionString">The connection string representing the database to act against.</param>
        </member>
        <member name="M:DbUp.Execution.SqlScriptExecutor.#ctor(System.String,System.String)">
            <summary>
             Initializes an instance of the <see cref="T:DbUp.Execution.SqlScriptExecutor"/> class.
            </summary>
            <param name="connectionString">The connection string representing the database to act against.</param>
            <param name="schema">The schema that contains the table.</param>
        </member>
        <member name="M:DbUp.Execution.SqlScriptExecutor.#ctor(System.String,DbUp.ILog)">
            <summary>
             Initializes an instance of the <see cref="T:DbUp.Execution.SqlScriptExecutor"/> class.
            </summary>
            <param name="connectionString">The connection string representing the database to act against.</param>
            <param name="log">The logging mechanism.</param>
        </member>
        <member name="M:DbUp.Execution.SqlScriptExecutor.#ctor(System.String,DbUp.ILog,System.String,DbUp.Preprocessors.IScriptPreprocessor[])">
            <summary>
             Initializes an instance of the <see cref="T:DbUp.Execution.SqlScriptExecutor"/> class.
            </summary>
            <param name="connectionString">The connection string representing the database to act against.</param>
            <param name="log">The logging mechanism.</param>
            <param name="schema">The schema that contains the table.</param>
            <param name="additionalScriptPreprocessors">Script Preprocessors in addition to variable substitution</param>
        </member>
        <member name="M:DbUp.Execution.SqlScriptExecutor.Execute(DbUp.ScriptProviders.SqlScript)">
            <summary>
            Executes the specified script against a database at a given connection string.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="M:DbUp.Execution.SqlScriptExecutor.VerifySchema">
            <summary>
            Verifies the existence of targeted schema. If schema is not verified, will check for the existence of the dbo schema.
            </summary>
        </member>
        <member name="M:DbUp.Execution.SqlScriptExecutor.Execute(DbUp.ScriptProviders.SqlScript,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Executes the specified script against a database at a given connection string.
            </summary>
            <param name="script">The script.</param>
            <param name="variables">Variables to replace in the script</param>
        </member>
        <member name="T:DbUp.Preprocessors.IScriptPreprocessor">
            <summary>
            Preprocessor that executes before scripts are executed against the database
            </summary>
        </member>
        <member name="M:DbUp.Preprocessors.IScriptPreprocessor.Process(System.String)">
            <summary>
            Performs some proprocessing step on a script
            </summary>
        </member>
        <member name="T:DbUp.Preprocessors.VariableSubstitutionPreprocessor">
            <summary>
            Substitutes variables for values in SqlScripts
            </summary>
        </member>
        <member name="M:DbUp.Preprocessors.VariableSubstitutionPreprocessor.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            
            </summary>
            <param name="variables"></param>
        </member>
        <member name="M:DbUp.Preprocessors.VariableSubstitutionPreprocessor.Process(System.String)">
            <summary>
            Substitutes variables 
            </summary>
            <param name="contents"></param>
        </member>
        <member name="T:DbUp.ScriptProviders.EmbeddedScriptProvider">
            <summary>
            The default <see cref="T:DbUp.ScriptProviders.IScriptProvider"/> implementation which retrieves upgrade scripts embedded in an assembly.
            </summary>
        </member>
        <member name="T:DbUp.ScriptProviders.IScriptProvider">
            <summary>
            Provides scripts to be executed.
            </summary>
        </member>
        <member name="M:DbUp.ScriptProviders.IScriptProvider.GetScripts">
            <summary>
            Gets all scripts that should be executed.
            </summary>
        </member>
        <member name="M:DbUp.ScriptProviders.EmbeddedScriptProvider.#ctor(System.Reflection.Assembly)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.ScriptProviders.EmbeddedScriptProvider"/> class.
            </summary>
            <param name="assembly">The assembly.</param>
        </member>
        <member name="M:DbUp.ScriptProviders.EmbeddedScriptProvider.#ctor(System.Reflection.Assembly,System.Func{System.String,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.ScriptProviders.EmbeddedScriptProvider"/> class.
            </summary>
            <param name="assembly">The assembly.</param>
            <param name="filter">The filter.</param>
        </member>
        <member name="M:DbUp.ScriptProviders.EmbeddedScriptProvider.GetScripts">
            <summary>
            Gets all scripts that should be executed.
            </summary>
            <returns></returns>
        </member>
        <member name="T:DbUp.ScriptProviders.FileSystemScriptProvider">
            <summary>
             Alternate <see cref="T:DbUp.ScriptProviders.IScriptProvider"/> implementation which retrieves upgrade scripts via a directory
            </summary>
        </member>
        <member name="M:DbUp.ScriptProviders.FileSystemScriptProvider.#ctor(System.String)">
            <summary>
            </summary>
            <param name="directoryPath">Path to SQL upgrade scripts</param>
        </member>
        <member name="M:DbUp.ScriptProviders.FileSystemScriptProvider.GetScripts">
            <summary>
            Gets all scripts that should be executed.
            </summary>
        </member>
        <member name="T:DbUp.ScriptProviders.SqlScript">
            <summary>
            Represents a SQL Server script that comes from an embedded resource in an assembly. 
            </summary>
        </member>
        <member name="M:DbUp.ScriptProviders.SqlScript.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.ScriptProviders.SqlScript"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="contents">The contents.</param>
        </member>
        <member name="P:DbUp.ScriptProviders.SqlScript.Contents">
            <summary>
            Gets the contents of the script.
            </summary>
            <value></value>
        </member>
        <member name="P:DbUp.ScriptProviders.SqlScript.Name">
            <summary>
            Gets the name of the script.
            </summary>
            <value></value>
        </member>
        <member name="T:DbUp.Journal.IJournal">
            <summary>
            This interface is provided to allow different projects to store version information differently.
            </summary>
        </member>
        <member name="M:DbUp.Journal.IJournal.GetExecutedScripts">
            <summary>
            Recalls the version number of the database.
            </summary>
            <returns></returns>
        </member>
        <member name="M:DbUp.Journal.IJournal.StoreExecutedScript(DbUp.ScriptProviders.SqlScript)">
            <summary>
            Records an upgrade script for a database.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="T:DbUp.Journal.TableJournal">
            <summary>
            An implementation of the <see cref="T:DbUp.Journal.IJournal"/> interface which tracks version numbers for a 
            SQL Server database using a table called dbo.SchemaVersions.
            </summary>
        </member>
        <member name="M:DbUp.Journal.TableJournal.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.Journal.TableJournal"/> class.
            </summary>
            <param name="targetDbConnectionString">The connection to the target database.</param>
            <example>
            var journal = new TableJournal("Server=server;Database=database;Trusted_Connection=True");
            </example>
        </member>
        <member name="M:DbUp.Journal.TableJournal.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.Journal.TableJournal"/> class.
            </summary>
            <param name="targetDbConnectionString">The connection to the target database.</param>
            <param name="schema">The schema that contains the table.</param>
            <example>
            var journal = new TableJournal("Server=server;Database=database;Trusted_Connection=True", "dbo");
            </example>
        </member>
        <member name="M:DbUp.Journal.TableJournal.#ctor(System.String,System.String,System.String,DbUp.ILog)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.Journal.TableJournal"/> class.
            </summary>
            <param name="targetDbConnectionString">The connection to the target database.</param>
            <param name="schema">The schema that contains the table.</param>
            <param name="table">The table name.</param>
            <param name="logger">The log.</param>
            <example>
            var journal = new TableJournal("Server=server;Database=database;Trusted_Connection=True", "dbo", "MyVersionTable");
            </example>
        </member>
        <member name="M:DbUp.Journal.TableJournal.GetExecutedScripts">
            <summary>
            Recalls the version number of the database.
            </summary>
            <returns>All executed scripts.</returns>
        </member>
        <member name="M:DbUp.Journal.TableJournal.StoreExecutedScript(DbUp.ScriptProviders.SqlScript)">
            <summary>
            Records a database upgrade for a database specified in a given connection string.
            </summary>
            <param name="script">The script.</param>
        </member>
        <member name="T:DbUp.Helpers.TemporarySqlDatabase">
            <summary>
            Used to create databases that are deleted at the end of a unit test.
            </summary>
        </member>
        <member name="M:DbUp.Helpers.TemporarySqlDatabase.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:DbUp.Helpers.TemporarySqlDatabase"/> class.
            </summary>
            <param name="name">The name.</param>
        </member>
        <member name="M:DbUp.Helpers.TemporarySqlDatabase.Create">
            <summary>
            Creates the database.
            </summary>
        </member>
        <member name="M:DbUp.Helpers.TemporarySqlDatabase.Dispose">
            <summary>
            Deletes the database.
            </summary>
        </member>
        <member name="P:DbUp.Helpers.TemporarySqlDatabase.ConnectionString">
            <summary>
            Gets the connection string.
            </summary>
            <value>The connection string.</value>
        </member>
        <member name="P:DbUp.Helpers.TemporarySqlDatabase.AdHoc">
            <summary>
            Gets a tool to run ad-hoc SQL queries.
            </summary>
            <value>The ad hoc.</value>
        </member>
    </members>
</doc>
